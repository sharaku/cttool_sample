config:
  env:
    - env_A=0
    - env_B=1
  junit:
    allowEmptyResults: true
    keepLongStdio: true
    testResults: 'result/*.xml'
  archiveArtifacts:
    artifacts: 'result/*'

stages:

stage:
  job1:
    node: master
    script:
     - sh: echo "job1 env_A=${env_A} env_C=${env_C} env_D=${env_D}"
     - sh: ls -al
     - sh: pwd
     - sh: sh ./mkresult result/junit1.xml
     - echo: "echo job1"

    env:
     - env_C="C"
     - env_D="D"
    result: 'result/*.xml'

  job2:
    node: master
    script:
     - sh: echo "job2"
     - sh: ls -al
     - sh: pwd
     - sh: sh ./mkresult result/junit2.xml
     - sh: echo "job2 env_C=${env_C} env_D=${env_D}"
    post:
      always:
       - sh: echo "job2 post always"
      success:
       - sh: echo "job2 post success"
       - archiveArtifacts:
           artifacts: 'result/*'
      failure:
       - sh: echo "job2 post failure"
    result: 'result/*.xml'

  job3:
    subproject: testset/sample

  job4:
    node: ZZZZZ
    required: no
    script:
     - sh: echo "job1 env_A=${env_A} env_C=${env_C} env_D=${env_D}"
     - sh: ls -al
     - sh: pwd
     - sh: sh ./mkresult result/junit1.xml
     - echo: "echo job1"
    env:
     - env_C="C"
     - env_D="D"
    result: 'result/*.xml'

  docker-job:
    node: docker
    docker:
      image: sharaku/cross-build
    env:
     - env_C="C"
     - env_D="D"
    script:
     - sh: echo "job1 env_A=${env_A} env_C=${env_C} env_D=${env_D}"
     - sh: ls -al
     - sh: pwd
     - sh: which gcc
     - sh: sh ./mkresult result/junit1.xml
     - echo: "echo job1"
    result: 'result/*.xml'

  docker-build:
    node: docker
    env:
     - env_C="C"
     - env_D="D"
    script:
     - docker:
        command: build
        tag: local/ubuntu
        Dockerfile: Dockerfile
     - docker:
        command: run
        image: sharaku/cross-build
        script:
         - sh: pwd
         - docker:
            command: exec
            image: sharaku/cross-build
            script:
             - sh: pwd
             - sh: which gcc

  para_job1:
    parallel:
     - job1
     - job2
     - job3
    post:
      always:
       - sh: echo "para_job1 post always"
      success:
       - sh: echo "para_job1 post success"
      failure:
       - sh: echo "para_job1 post failure"

  para_job2:
    parallel:
     - para_job1
     - para_job1
